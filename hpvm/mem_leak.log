==890== Memcheck, a memory error detector
==890== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==890== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==890== Command: /shared/workspace/grayson5/hpvm-release/hpvm/test/benchmarks/include//../../../build/bin/opt -load LLVMBuildDFG.so -load LLVMDFG2LLVM_CPU.so -load LLVMClearDFG.so -dfg2llvm-cpu -clearDFG -hpvm-timers-cpu -S build/seq/main.hpvm.ll -o build/seq/exe-seq.host.ll
==890== 
Writing '/tmp/DataflowGraph-bde9d0.dot'...  done. 
==890== Invalid read of size 8
==890==    at 0x71694DC: llvm::Use::getNext() const (Use.h:123)
==890==    by 0x7175C57: llvm::Value::use_iterator_impl<llvm::Use>::operator++() (Value.h:140)
==890==    by 0x7172893: llvm::Value::user_iterator_impl<llvm::User>::operator++() (Value.h:179)
==890==    by 0x716F592: llvm::Value::user_iterator_impl<llvm::User>::operator++(int) (Value.h:185)
==890==    by 0x71684DA: (anonymous namespace)::ClearDFG::runOnModule(llvm::Module&) (ClearDFG.cpp:113)
==890==    by 0x24B0FF8: (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) (LegacyPassManager.cpp:1750)
==890==    by 0x24B1811: llvm::legacy::PassManagerImpl::run(llvm::Module&) (LegacyPassManager.cpp:1863)
==890==    by 0x24B1A1C: llvm::legacy::PassManager::run(llvm::Module&) (LegacyPassManager.cpp:1894)
==890==    by 0x1520C9B: main (opt.cpp:892)
==890==  Address 0x6cef6b8 is 8 bytes inside a block of size 96 free'd
==890==    at 0x66B8FBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==890==    by 0x2550C73: llvm::User::operator delete(void*) (User.cpp:188)
==890==    by 0x2552050: llvm::Value::deleteValue() (Instruction.def:209)
==890==    by 0x205F9CB: llvm::ilist_alloc_traits<llvm::Instruction>::deleteNode(llvm::Instruction*) (Instruction.h:774)
==890==    by 0x20601AE: llvm::iplist_impl<llvm::simple_ilist<llvm::Instruction>, llvm::SymbolTableListTraits<llvm::Instruction> >::erase(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, true, false, void>, false, false>) (ilist.h:266)
==890==    by 0x2468856: llvm::Instruction::eraseFromParent() (Instruction.cpp:68)
==890==    by 0x71684C6: (anonymous namespace)::ClearDFG::runOnModule(llvm::Module&) (ClearDFG.cpp:115)
==890==    by 0x24B0FF8: (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) (LegacyPassManager.cpp:1750)
==890==    by 0x24B1811: llvm::legacy::PassManagerImpl::run(llvm::Module&) (LegacyPassManager.cpp:1863)
==890==    by 0x24B1A1C: llvm::legacy::PassManager::run(llvm::Module&) (LegacyPassManager.cpp:1894)
==890==    by 0x1520C9B: main (opt.cpp:892)
==890==  Block was alloc'd at
==890==    at 0x66B7E63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==890==    by 0x2550971: allocateFixedOperandUser (User.cpp:124)
==890==    by 0x2550971: llvm::User::operator new(unsigned long, unsigned int, unsigned int) (User.cpp:146)
==890==    by 0x15D90A7: llvm::CallInst::Create(llvm::FunctionType*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&, llvm::Instruction*) (Instructions.h:1458)
==890==    by 0x3664241: llvm::LLParser::ParseCall(llvm::Instruction*&, llvm::LLParser::PerFunctionState&, llvm::CallInst::TailCallKind) (LLParser.cpp:7244)
==890==    by 0x365F062: llvm::LLParser::ParseInstruction(llvm::Instruction*&, llvm::BasicBlock*, llvm::LLParser::PerFunctionState&) (LLParser.cpp:6146)
==890==    by 0x365E7D9: llvm::LLParser::ParseBasicBlock(llvm::LLParser::PerFunctionState&) (LLParser.cpp:5949)
==890==    by 0x365E4A4: llvm::LLParser::ParseFunctionBody(llvm::Function&) (LLParser.cpp:5893)
==890==    by 0x363F288: llvm::LLParser::ParseDefine() (LLParser.cpp:558)
==890==    by 0x363E410: llvm::LLParser::ParseTopLevelEntities() (LLParser.cpp:330)
==890==    by 0x363C456: llvm::LLParser::Run() (LLParser.cpp:73)
==890==    by 0x362DB9B: llvm::parseAssemblyInto(llvm::MemoryBufferRef, llvm::Module*, llvm::ModuleSummaryIndex*, llvm::SMDiagnostic&, llvm::SlotMapping*, bool, llvm::StringRef) (Parser.cpp:37)
==890==    by 0x362DC93: llvm::parseAssembly(llvm::MemoryBufferRef, llvm::SMDiagnostic&, llvm::LLVMContext&, llvm::SlotMapping*, bool, llvm::StringRef) (Parser.cpp:47)
==890== 
==890== 
==890== HEAP SUMMARY:
==890==     in use at exit: 78,164 bytes in 109 blocks
==890==   total heap usage: 66,666 allocs, 66,557 frees, 13,609,804 bytes allocated
==890== 
==890== LEAK SUMMARY:
==890==    definitely lost: 2,140 bytes in 38 blocks
==890==    indirectly lost: 3,552 bytes in 55 blocks
==890==      possibly lost: 0 bytes in 0 blocks
==890==    still reachable: 72,472 bytes in 16 blocks
==890==         suppressed: 0 bytes in 0 blocks
==890== Rerun with --leak-check=full to see details of leaked memory
==890== 
==890== For lists of detected and suppressed errors, rerun with: -s
==890== ERROR SUMMARY: 2 errors from 1 contexts (suppressed: 0 from 0)

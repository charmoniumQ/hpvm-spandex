digraph structs {
	node [shape=record];
	"A.entry" [label="{<i0>i32* tmp|<i1>i64 tmpSize}|A.entry|{<o0>0x556e9a8f5190|<o1>0x556e9a8c2100}"];
	"B.exit" [label="{<i0>i64}|B.exit|{<o0>i64}"];
	"B.entry" [label="{<i0>i32* tmp|<i1>i64 tmpSize}|B.entry|{<o0>0x556e9a8f5190|<o1>0x556e9a8c2100}"];
	"B_c" [label="{<i0>i32* tmp|<i1>i64 tmpSize}|B_c|{<o0>i64}"];
	"A.exit" [label="{<i0>i64}|A.exit|{<o0>i64}"];
	"C" [label="{<i0>i32* tmp|<i1>i64 tmpSize}|C|{<o0>i64}"];

	"C" -> "A.exit" [tailport=o0, headport=i0, ];
	"B.entry" -> "B_c" [tailport=o1, headport=i1, ];
	"B.entry" -> "B_c" [tailport=o0, headport=i0, ];
	"B.exit" -> "C" [tailport=o0, headport=i1, ];
	"B_c" -> "B.exit" [tailport=o0, headport=i0, ];
	"A.entry" -> "B.entry" [tailport=o1, headport=i1, ];
	"A.entry" -> "C" [tailport=o0, headport=i0, ];
	"A.entry" -> "B.entry" [tailport=o0, headport=i0, ];
}

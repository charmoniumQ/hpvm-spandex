digraph structs {
	node [shape=record];
	"sqr_sclr(int*, ulong, int*, ulong)(2,1)" [label="{<i0>i0|<i1>i1|<i2>i2|<i3>i3}|sqr_sclr(int*, ulong, int*, ulong)(2,1)|{<o0>o0}"];
	"nop(ulong)(1,1)" [label="{<i0>i0}|nop(ulong)(1,1)|{<o0>o0}"];
	"dbl_vect(int*, ulong, int*, ulong, ulong)(2,2)" [label="{<i0>i0}|dbl_vect(int*, ulong, int*, ulong, ulong)(2,2)|{<o0>o0}"];
	"dbl_sclr(int*, ulong, int*, ulong)(2,1)" [label="{<i0>i0|<i1>i1|<i2>i2|<i3>i3}|dbl_sclr(int*, ulong, int*, ulong)(2,1)|{<o0>o0}"];
	"dbl_sqr_vect(int*, ulong, int*, ulong, int*, ulong, ulong)(1,0)" [label="{}|dbl_sqr_vect(int*, ulong, int*, ulong, int*, ulong, ulong)(1,0)|{<o0>o0|<o1>o1|<o2>o2|<o3>o3|<o4>o4|<o5>o5|<o6>o6}"];
	"sqr_vect(int*, ulong, int*, ulong, ulong)(2,0)" [label="{<i0>i0|<i1>i1|<i2>i2|<i3>i3|<i4>i4}|sqr_vect(int*, ulong, int*, ulong, ulong)(2,0)|{<o0>o0|<o1>o1|<o2>o2|<o3>o3}"];
	"dbl_sqr_vect(int*, ulong, int*, ulong, int*, ulong, ulong)(1,4)" [label="{<i0>i0}|dbl_sqr_vect(int*, ulong, int*, ulong, int*, ulong, ulong)(1,4)|{}"];
	"dbl_vect(int*, ulong, int*, ulong, ulong)(2,0)" [label="{<i0>i0|<i1>i1|<i2>i2|<i3>i3|<i4>i4}|dbl_vect(int*, ulong, int*, ulong, ulong)(2,0)|{<o0>o0|<o1>o1|<o2>o2|<o3>o3}"];
	"sqr_vect(int*, ulong, int*, ulong, ulong)(2,2)" [label="{<i0>i0}|sqr_vect(int*, ulong, int*, ulong, ulong)(2,2)|{<o0>o0}"];

	"dbl_sclr(int*, ulong, int*, ulong)(2,1)" -> "dbl_vect(int*, ulong, int*, ulong, ulong)(2,2)" [tailport=o0, headport=i0, ];
	"dbl_vect(int*, ulong, int*, ulong, ulong)(2,0)" -> "dbl_sclr(int*, ulong, int*, ulong)(2,1)" [tailport=o3, headport=i3, ];
	"dbl_vect(int*, ulong, int*, ulong, ulong)(2,0)" -> "dbl_sclr(int*, ulong, int*, ulong)(2,1)" [tailport=o2, headport=i2, ];
	"dbl_vect(int*, ulong, int*, ulong, ulong)(2,0)" -> "dbl_sclr(int*, ulong, int*, ulong)(2,1)" [tailport=o1, headport=i1, ];
	"dbl_sqr_vect(int*, ulong, int*, ulong, int*, ulong, ulong)(1,0)" -> "dbl_vect(int*, ulong, int*, ulong, ulong)(2,0)" [tailport=o4, headport=i2, ];
	"dbl_sqr_vect(int*, ulong, int*, ulong, int*, ulong, ulong)(1,0)" -> "dbl_vect(int*, ulong, int*, ulong, ulong)(2,0)" [tailport=o6, headport=i4, ];
	"dbl_sqr_vect(int*, ulong, int*, ulong, int*, ulong, ulong)(1,0)" -> "sqr_vect(int*, ulong, int*, ulong, ulong)(2,0)" [tailport=o6, headport=i4, ];
	"sqr_vect(int*, ulong, int*, ulong, ulong)(2,2)" -> "dbl_vect(int*, ulong, int*, ulong, ulong)(2,0)" [tailport=o0, headport=i1, ];
	"sqr_sclr(int*, ulong, int*, ulong)(2,1)" -> "sqr_vect(int*, ulong, int*, ulong, ulong)(2,2)" [tailport=o0, headport=i0, ];
	"sqr_vect(int*, ulong, int*, ulong, ulong)(2,0)" -> "sqr_sclr(int*, ulong, int*, ulong)(2,1)" [tailport=o0, headport=i0, ];
	"dbl_sqr_vect(int*, ulong, int*, ulong, int*, ulong, ulong)(1,0)" -> "sqr_vect(int*, ulong, int*, ulong, ulong)(2,0)" [tailport=o0, headport=i0, ];
	"dbl_sqr_vect(int*, ulong, int*, ulong, int*, ulong, ulong)(1,0)" -> "dbl_vect(int*, ulong, int*, ulong, ulong)(2,0)" [tailport=o5, headport=i3, ];
	"dbl_sqr_vect(int*, ulong, int*, ulong, int*, ulong, ulong)(1,0)" -> "nop(ulong)(1,1)" [tailport=o1, headport=i0, ];
	"sqr_vect(int*, ulong, int*, ulong, ulong)(2,0)" -> "sqr_sclr(int*, ulong, int*, ulong)(2,1)" [tailport=o1, headport=i1, ];
	"nop(ulong)(1,1)" -> "sqr_vect(int*, ulong, int*, ulong, ulong)(2,0)" [tailport=o0, headport=i1, ];
	"sqr_vect(int*, ulong, int*, ulong, ulong)(2,0)" -> "sqr_sclr(int*, ulong, int*, ulong)(2,1)" [tailport=o2, headport=i2, ];
	"dbl_sqr_vect(int*, ulong, int*, ulong, int*, ulong, ulong)(1,0)" -> "dbl_vect(int*, ulong, int*, ulong, ulong)(2,0)" [tailport=o2, headport=i0, ];
	"dbl_sqr_vect(int*, ulong, int*, ulong, int*, ulong, ulong)(1,0)" -> "sqr_vect(int*, ulong, int*, ulong, ulong)(2,0)" [tailport=o2, headport=i2, ];
	"dbl_vect(int*, ulong, int*, ulong, ulong)(2,2)" -> "dbl_sqr_vect(int*, ulong, int*, ulong, int*, ulong, ulong)(1,4)" [tailport=o0, headport=i0, ];
	"dbl_sqr_vect(int*, ulong, int*, ulong, int*, ulong, ulong)(1,0)" -> "sqr_vect(int*, ulong, int*, ulong, ulong)(2,0)" [tailport=o3, headport=i3, ];
	"sqr_vect(int*, ulong, int*, ulong, ulong)(2,0)" -> "sqr_sclr(int*, ulong, int*, ulong)(2,1)" [tailport=o3, headport=i3, ];
	"dbl_vect(int*, ulong, int*, ulong, ulong)(2,0)" -> "dbl_sclr(int*, ulong, int*, ulong)(2,1)" [tailport=o0, headport=i0, ];
}

digraph structs {
	node [shape=record];
	"denoise_fxp_wrapper.exit" [label="{<i0>i64}|denoise_fxp_wrapper.exit|{<o0>i64}"];
	"transform_fxp_wrapper.exit" [label="{<i0>i64}|transform_fxp_wrapper.exit|{<o0>i64}"];
	"scale_fxp_wrapper.exit" [label="{<i0>i64}|scale_fxp_wrapper.exit|{<o0>i64}"];
	"gamut_fxp_wrapper.exit" [label="{<i0>i64}|gamut_fxp_wrapper.exit|{<o0>i64}"];
	"descale_fxp_wrapper.entry" [label="{<i0>float* input|<i1>i64 bytes_input|<i2>i8* result|<i3>i64 bytes_result|<i4>i64 row_size|<i5>i64 col_size}|descale_fxp_wrapper.entry|{<o0>float*|<o1>i64|<o2>i8*|<o3>i64|<o4>i64|<o5>i64}"];
	"tone_map_fxp_wrapper.entry" [label="{<i0>float* input|<i1>i64 bytes_input|<i2>float* result|<i3>i64 bytes_result|<i4>float* tone_map|<i5>i64 bytes_tone_map|<i6>i64 row_size|<i7>i64 col_size}|tone_map_fxp_wrapper.entry|{<o0>float*|<o1>i64|<o2>float*|<o3>i64|<o4>float*|<o5>i64|<o6>i64|<o7>i64}"];
	"tone_map_fxp" [label="{<i0>float* input|<i1>i64 bytes_input|<i2>float* result|<i3>i64 bytes_result|<i4>float* tone_map|<i5>i64 bytes_tone_map|<i6>i64 row_size|<i7>i64 col_size}|tone_map_fxp|{<o0>i64}"];
	"demosaic_fxp_wrapper.exit" [label="{<i0>i64}|demosaic_fxp_wrapper.exit|{<o0>i64}"];
	"tone_map_fxp_wrapper.exit" [label="{<i0>i64}|tone_map_fxp_wrapper.exit|{<o0>i64}"];
	"CamPipeRoot.entry" [label="{<i0>i8* input|<i1>i64 bytes_input|<i2>i8* result|<i3>i64 bytes_result|<i4>float* input_scaled|<i5>i64 bytes_input_scaled|<i6>float* result_scaled|<i7>i64 bytes_result_scaled|<i8>float* demosaic_out|<i9>i64 bytes_demosaic_out|<i10>float* denoise_out|<i11>i64 bytes_denoise_out|<i12>float* transform_out|<i13>i64 bytes_transform_out|<i14>float* gamut_out|<i15>i64 bytes_gamut_out|<i16>float* TsTw|<i17>i64 bytes_TsTw|<i18>float* ctrl_pts|<i19>i64 bytes_ctrl_pts|<i20>float* weights|<i21>i64 bytes_weights|<i22>float* coefs|<i23>i64 bytes_coefs|<i24>float* l2_dist|<i25>i64 bytes_l2_dist|<i26>float* tone_map|<i27>i64 bytes_tone_map|<i28>i64 row_size|<i29>i64 col_size}|CamPipeRoot.entry|{<o0>i8*|<o1>i64|<o2>i8*|<o3>i64|<o4>float*|<o5>i64|<o6>float*|<o7>i64|<o8>float*|<o9>i64|<o10>float*|<o11>i64|<o12>float*|<o13>i64|<o14>float*|<o15>i64|<o16>float*|<o17>i64|<o18>float*|<o19>i64|<o20>float*|<o21>i64|<o22>float*|<o23>i64|<o24>float*|<o25>i64|<o26>float*|<o27>i64|<o28>i64|<o29>i64}"];
	"scale_fxp_wrapper.entry" [label="{<i0>i8* input|<i1>i64 bytes_input|<i2>float* result|<i3>i64 bytes_result|<i4>i64 row_size|<i5>i64 col_size}|scale_fxp_wrapper.entry|{<o0>i8*|<o1>i64|<o2>float*|<o3>i64|<o4>i64|<o5>i64}"];
	"descale_fxp" [label="{<i0>float* input|<i1>i64 bytes_input|<i2>i8* output|<i3>i64 bytes_result|<i4>i64 row_size|<i5>i64 col_size}|descale_fxp|{}"];
	"scale_fxp" [label="{<i0>i8* input|<i1>i64 bytes_input|<i2>float* output|<i3>i64 bytes_output|<i4>i64 row_size|<i5>i64 col_size}|scale_fxp|{<o0>i64}"];
	"gamut_map_fxp" [label="{<i0>float* input|<i1>i64 bytes_input|<i2>float* result|<i3>i64 bytes_result|<i4>float* ctrl_pts|<i5>i64 bytes_ctrl_pts|<i6>float* weights|<i7>i64 bytes_weights|<i8>float* coefs|<i9>i64 bytes_coefs|<i10>float* l2_dist|<i11>i64 bytes_l2_dist|<i12>i64 row_size|<i13>i64 col_size}|gamut_map_fxp|{<o0>i64}"];
	"transform_fxp_wrapper.entry" [label="{<i0>float* input|<i1>i64 bytes_input|<i2>float* result|<i3>i64 bytes_result|<i4>float* TsTw_tran|<i5>i64 bytes_TsTw|<i6>i64 row_size|<i7>i64 col_size}|transform_fxp_wrapper.entry|{<o0>float*|<o1>i64|<o2>float*|<o3>i64|<o4>float*|<o5>i64|<o6>i64|<o7>i64}"];
	"transform_fxp" [label="{<i0>float* input|<i1>i64 bytes_input|<i2>float* result|<i3>i64 bytes_result|<i4>float* TsTw_tran|<i5>i64 bytes_TsTw|<i6>i64 row_size|<i7>i64 col_size}|transform_fxp|{<o0>i64}"];
	"gamut_fxp_wrapper.entry" [label="{<i0>float* input|<i1>i64 bytes_input|<i2>float* result|<i3>i64 bytes_result|<i4>float* ctrl_pts|<i5>i64 bytes_ctrl_pts|<i6>float* weights|<i7>i64 bytes_weights|<i8>float* coefs|<i9>i64 bytes_coefs|<i10>float* l2_dist|<i11>i64 bytes_l2_dist|<i12>i64 row_size|<i13>i64 col_size}|gamut_fxp_wrapper.entry|{<o0>float*|<o1>i64|<o2>float*|<o3>i64|<o4>float*|<o5>i64|<o6>float*|<o7>i64|<o8>float*|<o9>i64|<o10>float*|<o11>i64|<o12>i64|<o13>i64}"];
	"demosaic_fxp_wrapper.entry" [label="{<i0>float* input|<i1>i64 bytes_input|<i2>float* result|<i3>i64 bytes_result|<i4>i64 row_size|<i5>i64 col_size}|demosaic_fxp_wrapper.entry|{<o0>float*|<o1>i64|<o2>float*|<o3>i64|<o4>i64|<o5>i64}"];
	"demosaic_fxp" [label="{<i0>float* input|<i1>i64 bytes_input|<i2>float* result|<i3>i64 bytes_result|<i4>i64 row_size|<i5>i64 col_size}|demosaic_fxp|{<o0>i64}"];
	"denoise_fxp_wrapper.entry" [label="{<i0>float* input|<i1>i64 bytes_input|<i2>float* result|<i3>i64 bytes_result|<i4>i64 row_size|<i5>i64 col_size}|denoise_fxp_wrapper.entry|{<o0>float*|<o1>i64|<o2>float*|<o3>i64|<o4>i64|<o5>i64}"];
	"denoise_fxp" [label="{<i0>float* input|<i1>i64 bytes_input|<i2>float* result|<i3>i64 bytes_result|<i4>i64 row_size|<i5>i64 col_size}|denoise_fxp|{<o0>i64}"];

	"tone_map_fxp" -> "tone_map_fxp_wrapper.exit" [tailport=o0, headport=i0, ];
	"tone_map_fxp_wrapper.entry" -> "tone_map_fxp" [tailport=o7, headport=i7, ];
	"tone_map_fxp_wrapper.entry" -> "tone_map_fxp" [tailport=o6, headport=i6, ];
	"tone_map_fxp_wrapper.entry" -> "tone_map_fxp" [tailport=o5, headport=i5, ];
	"tone_map_fxp_wrapper.entry" -> "tone_map_fxp" [tailport=o4, headport=i4, ];
	"tone_map_fxp_wrapper.entry" -> "tone_map_fxp" [tailport=o3, headport=i3, ];
	"tone_map_fxp_wrapper.entry" -> "tone_map_fxp" [tailport=o2, headport=i2, ];
	"tone_map_fxp_wrapper.entry" -> "tone_map_fxp" [tailport=o1, headport=i1, ];
	"tone_map_fxp_wrapper.entry" -> "tone_map_fxp" [tailport=o0, headport=i0, ];
	"tone_map_fxp_wrapper.exit" -> "descale_fxp_wrapper.entry" [tailport=o0, headport=i1, ];
	"gamut_map_fxp" -> "gamut_fxp_wrapper.exit" [tailport=o0, headport=i0, ];
	"descale_fxp_wrapper.entry" -> "descale_fxp" [tailport=o5, headport=i5, ];
	"CamPipeRoot.entry" -> "tone_map_fxp_wrapper.entry" [tailport=o27, headport=i5, ];
	"scale_fxp_wrapper.entry" -> "scale_fxp" [tailport=o4, headport=i4, ];
	"transform_fxp_wrapper.entry" -> "transform_fxp" [tailport=o3, headport=i3, ];
	"descale_fxp_wrapper.entry" -> "descale_fxp" [tailport=o4, headport=i4, ];
	"CamPipeRoot.entry" -> "tone_map_fxp_wrapper.entry" [tailport=o26, headport=i4, ];
	"scale_fxp_wrapper.entry" -> "scale_fxp" [tailport=o3, headport=i3, ];
	"transform_fxp_wrapper.entry" -> "transform_fxp" [tailport=o2, headport=i2, ];
	"gamut_fxp_wrapper.entry" -> "gamut_map_fxp" [tailport=o11, headport=i11, ];
	"CamPipeRoot.entry" -> "tone_map_fxp_wrapper.entry" [tailport=o7, headport=i3, ];
	"gamut_fxp_wrapper.entry" -> "gamut_map_fxp" [tailport=o10, headport=i10, ];
	"CamPipeRoot.entry" -> "descale_fxp_wrapper.entry" [tailport=o6, headport=i0, ];
	"CamPipeRoot.entry" -> "tone_map_fxp_wrapper.entry" [tailport=o6, headport=i2, ];
	"descale_fxp_wrapper.entry" -> "descale_fxp" [tailport=o3, headport=i3, ];
	"CamPipeRoot.entry" -> "gamut_fxp_wrapper.entry" [tailport=o25, headport=i11, ];
	"scale_fxp_wrapper.entry" -> "scale_fxp" [tailport=o2, headport=i2, ];
	"transform_fxp_wrapper.entry" -> "transform_fxp" [tailport=o1, headport=i1, ];
	"descale_fxp_wrapper.entry" -> "descale_fxp" [tailport=o2, headport=i2, ];
	"CamPipeRoot.entry" -> "gamut_fxp_wrapper.entry" [tailport=o24, headport=i10, ];
	"scale_fxp_wrapper.entry" -> "scale_fxp" [tailport=o1, headport=i1, ];
	"transform_fxp_wrapper.entry" -> "transform_fxp" [tailport=o0, headport=i0, ];
	"descale_fxp_wrapper.entry" -> "descale_fxp" [tailport=o1, headport=i1, ];
	"CamPipeRoot.entry" -> "gamut_fxp_wrapper.entry" [tailport=o23, headport=i9, ];
	"descale_fxp_wrapper.entry" -> "descale_fxp" [tailport=o0, headport=i0, ];
	"CamPipeRoot.entry" -> "gamut_fxp_wrapper.entry" [tailport=o22, headport=i8, ];
	"CamPipeRoot.entry" -> "gamut_fxp_wrapper.entry" [tailport=o21, headport=i7, ];
	"CamPipeRoot.entry" -> "gamut_fxp_wrapper.entry" [tailport=o20, headport=i6, ];
	"CamPipeRoot.entry" -> "gamut_fxp_wrapper.entry" [tailport=o19, headport=i5, ];
	"gamut_fxp_wrapper.exit" -> "tone_map_fxp_wrapper.entry" [tailport=o0, headport=i1, ];
	"gamut_fxp_wrapper.entry" -> "gamut_map_fxp" [tailport=o9, headport=i9, ];
	"CamPipeRoot.entry" -> "scale_fxp_wrapper.entry" [tailport=o5, headport=i3, ];
	"gamut_fxp_wrapper.entry" -> "gamut_map_fxp" [tailport=o8, headport=i8, ];
	"CamPipeRoot.entry" -> "demosaic_fxp_wrapper.entry" [tailport=o4, headport=i0, ];
	"CamPipeRoot.entry" -> "scale_fxp_wrapper.entry" [tailport=o4, headport=i2, ];
	"CamPipeRoot.entry" -> "descale_fxp_wrapper.entry" [tailport=o28, headport=i4, ];
	"CamPipeRoot.entry" -> "demosaic_fxp_wrapper.entry" [tailport=o28, headport=i4, ];
	"CamPipeRoot.entry" -> "scale_fxp_wrapper.entry" [tailport=o28, headport=i4, ];
	"CamPipeRoot.entry" -> "denoise_fxp_wrapper.entry" [tailport=o28, headport=i4, ];
	"CamPipeRoot.entry" -> "transform_fxp_wrapper.entry" [tailport=o28, headport=i6, ];
	"CamPipeRoot.entry" -> "gamut_fxp_wrapper.entry" [tailport=o28, headport=i12, ];
	"CamPipeRoot.entry" -> "tone_map_fxp_wrapper.entry" [tailport=o28, headport=i6, ];
	"CamPipeRoot.entry" -> "denoise_fxp_wrapper.entry" [tailport=o11, headport=i3, ];
	"CamPipeRoot.entry" -> "gamut_fxp_wrapper.entry" [tailport=o18, headport=i4, ];
	"denoise_fxp_wrapper.entry" -> "denoise_fxp" [tailport=o5, headport=i5, ];
	"scale_fxp_wrapper.entry" -> "scale_fxp" [tailport=o0, headport=i0, ];
	"CamPipeRoot.entry" -> "descale_fxp_wrapper.entry" [tailport=o3, headport=i3, ];
	"gamut_fxp_wrapper.entry" -> "gamut_map_fxp" [tailport=o7, headport=i7, ];
	"CamPipeRoot.entry" -> "descale_fxp_wrapper.entry" [tailport=o29, headport=i5, ];
	"CamPipeRoot.entry" -> "demosaic_fxp_wrapper.entry" [tailport=o29, headport=i5, ];
	"CamPipeRoot.entry" -> "scale_fxp_wrapper.entry" [tailport=o29, headport=i5, ];
	"CamPipeRoot.entry" -> "denoise_fxp_wrapper.entry" [tailport=o29, headport=i5, ];
	"CamPipeRoot.entry" -> "transform_fxp_wrapper.entry" [tailport=o29, headport=i7, ];
	"CamPipeRoot.entry" -> "gamut_fxp_wrapper.entry" [tailport=o29, headport=i13, ];
	"CamPipeRoot.entry" -> "tone_map_fxp_wrapper.entry" [tailport=o29, headport=i7, ];
	"transform_fxp_wrapper.entry" -> "transform_fxp" [tailport=o5, headport=i5, ];
	"CamPipeRoot.entry" -> "gamut_fxp_wrapper.entry" [tailport=o12, headport=i0, ];
	"CamPipeRoot.entry" -> "transform_fxp_wrapper.entry" [tailport=o12, headport=i2, ];
	"gamut_fxp_wrapper.entry" -> "gamut_map_fxp" [tailport=o13, headport=i13, ];
	"CamPipeRoot.entry" -> "demosaic_fxp_wrapper.entry" [tailport=o9, headport=i3, ];
	"CamPipeRoot.entry" -> "transform_fxp_wrapper.entry" [tailport=o10, headport=i0, ];
	"CamPipeRoot.entry" -> "denoise_fxp_wrapper.entry" [tailport=o10, headport=i2, ];
	"scale_fxp_wrapper.exit" -> "demosaic_fxp_wrapper.entry" [tailport=o0, headport=i1, ];
	"gamut_fxp_wrapper.entry" -> "gamut_map_fxp" [tailport=o2, headport=i2, ];
	"transform_fxp_wrapper.entry" -> "transform_fxp" [tailport=o4, headport=i4, ];
	"scale_fxp_wrapper.entry" -> "scale_fxp" [tailport=o5, headport=i5, ];
	"CamPipeRoot.entry" -> "denoise_fxp_wrapper.entry" [tailport=o8, headport=i0, ];
	"CamPipeRoot.entry" -> "demosaic_fxp_wrapper.entry" [tailport=o8, headport=i2, ];
	"gamut_fxp_wrapper.entry" -> "gamut_map_fxp" [tailport=o12, headport=i12, ];
	"scale_fxp" -> "scale_fxp_wrapper.exit" [tailport=o0, headport=i0, ];
	"CamPipeRoot.entry" -> "tone_map_fxp_wrapper.entry" [tailport=o14, headport=i0, ];
	"CamPipeRoot.entry" -> "gamut_fxp_wrapper.entry" [tailport=o14, headport=i2, ];
	"denoise_fxp_wrapper.entry" -> "denoise_fxp" [tailport=o1, headport=i1, ];
	"transform_fxp_wrapper.exit" -> "gamut_fxp_wrapper.entry" [tailport=o0, headport=i1, ];
	"demosaic_fxp_wrapper.exit" -> "denoise_fxp_wrapper.entry" [tailport=o0, headport=i1, ];
	"demosaic_fxp_wrapper.entry" -> "demosaic_fxp" [tailport=o0, headport=i0, ];
	"demosaic_fxp_wrapper.entry" -> "demosaic_fxp" [tailport=o1, headport=i1, ];
	"demosaic_fxp_wrapper.entry" -> "demosaic_fxp" [tailport=o2, headport=i2, ];
	"demosaic_fxp_wrapper.entry" -> "demosaic_fxp" [tailport=o3, headport=i3, ];
	"demosaic_fxp_wrapper.entry" -> "demosaic_fxp" [tailport=o4, headport=i4, ];
	"demosaic_fxp_wrapper.entry" -> "demosaic_fxp" [tailport=o5, headport=i5, ];
	"denoise_fxp_wrapper.exit" -> "transform_fxp_wrapper.entry" [tailport=o0, headport=i1, ];
	"CamPipeRoot.entry" -> "transform_fxp_wrapper.entry" [tailport=o13, headport=i3, ];
	"denoise_fxp_wrapper.entry" -> "denoise_fxp" [tailport=o0, headport=i0, ];
	"CamPipeRoot.entry" -> "gamut_fxp_wrapper.entry" [tailport=o15, headport=i3, ];
	"denoise_fxp_wrapper.entry" -> "denoise_fxp" [tailport=o2, headport=i2, ];
	"CamPipeRoot.entry" -> "transform_fxp_wrapper.entry" [tailport=o16, headport=i4, ];
	"demosaic_fxp" -> "demosaic_fxp_wrapper.exit" [tailport=o0, headport=i0, ];
	"denoise_fxp_wrapper.entry" -> "denoise_fxp" [tailport=o3, headport=i3, ];
	"CamPipeRoot.entry" -> "transform_fxp_wrapper.entry" [tailport=o17, headport=i5, ];
	"denoise_fxp_wrapper.entry" -> "denoise_fxp" [tailport=o4, headport=i4, ];
	"denoise_fxp" -> "denoise_fxp_wrapper.exit" [tailport=o0, headport=i0, ];
	"transform_fxp_wrapper.entry" -> "transform_fxp" [tailport=o6, headport=i6, ];
	"transform_fxp_wrapper.entry" -> "transform_fxp" [tailport=o7, headport=i7, ];
	"transform_fxp" -> "transform_fxp_wrapper.exit" [tailport=o0, headport=i0, ];
	"gamut_fxp_wrapper.entry" -> "gamut_map_fxp" [tailport=o0, headport=i0, ];
	"gamut_fxp_wrapper.entry" -> "gamut_map_fxp" [tailport=o1, headport=i1, ];
	"gamut_fxp_wrapper.entry" -> "gamut_map_fxp" [tailport=o3, headport=i3, ];
	"CamPipeRoot.entry" -> "scale_fxp_wrapper.entry" [tailport=o0, headport=i0, ];
	"gamut_fxp_wrapper.entry" -> "gamut_map_fxp" [tailport=o4, headport=i4, ];
	"CamPipeRoot.entry" -> "scale_fxp_wrapper.entry" [tailport=o1, headport=i1, ];
	"gamut_fxp_wrapper.entry" -> "gamut_map_fxp" [tailport=o5, headport=i5, ];
	"CamPipeRoot.entry" -> "descale_fxp_wrapper.entry" [tailport=o2, headport=i2, ];
	"gamut_fxp_wrapper.entry" -> "gamut_map_fxp" [tailport=o6, headport=i6, ];
}
